name: Build docker image and redeploy on cluster

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    permissions:
      id-token: write
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Log in to DockerHub
      uses: docker/login-action@v3.1.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@v3.3.0

    - name: Build and push
      uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: jusiii/cinema_frontend:v2

    - name: Get AWS Credentials
      uses: step-security/wait-for-secrets@v1.1.0
      id: wait-for-secrets
      with:
        secrets: |
          AWS_ACCESS_KEY_ID:
            name: 'AWS access key id'
            description: 'Access key id for prod'
          AWS_SECRET_ACCESS_KEY:
            name: 'AWS secret access key'
            description: 'Secret access key for prod'
          AWS_SESSION_TOKEN:
            name: 'AWS session token'
            description: 'Session token for prod'
          AWS_EKS_NAME:
            name: 'EKS Name'
            description: 'The name of you targeted eks cluster'

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ steps.wait-for-secrets.outputs.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ steps.wait-for-secrets.outputs.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ steps.wait-for-secrets.outputs.AWS_SESSION_TOKEN }}
        aws-region: us-west-2

    - name: Install kubectl
      uses: imajeetyadav/kubectl@v1

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --name ${{ steps.wait-for-secrets.outputs.AWS_EKS_NAME }}

    - name: Create Deployment Rollout
      run: kubectl rollout restart -n ns-chaos-ipa-test-application deployment/cinema-frontend
